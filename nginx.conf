input {
	beats {
		port => 5044
	}
}
filter {
	if [input][type] == "access" {
		grok {
			 patterns_dir => ["/etc/logstash/pattern"]
			match => { "message" => "%{IPORHOST:clientip} %{NGUSER:ident} %{NGUSER:auth} \[%{HTTPDATE:timestamp}\] \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:response}" }
		}

	}
	if [input][type] == "error" {
		grok {
			match => ["message", "(?<timestamp>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER:threadid}\: \*%{NUMBER:connectionid} %{GREEDYDATA:errormessage}, client: %{IP:client}, server: %{GREEDYDATA:server}, request: %{GREEDYDATA:request}"]
			overwrite => [ "message" ]
		}
	}
}
output {
	if "access" in [tags] {
		elasticsearch {
			hosts => "https://localhost:9200"
			index => "access-%{+YYY.MM.dd}"
			user => "elastic"
			password => "satuhatisatujiwa"
			cacert => "/etc/elasticsearch/certs/http_ca.crt"
			ssl_certificate_verification => false
			document_type => "nginx_logs"
		}
	}
	if "error" in [tags] {
		elasticsearch {
			hosts => "https://localhost:9200"
			index => "error-%{+YYY.MM.dd}"
			user => "elastic"
			password => "satuhatisatujiwa"
			cacert => "/etc/elasticsearch/certs/http_ca.crt"
			ssl_certificate_verification => false
			document_type => "nginx_logs"
		}
	}
	stdout { codec => rubydebug }
}

