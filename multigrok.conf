input {
	beats {
		port => 5044
	}
}
filter {
	if [input][type] == "access" {
		grok {
			match => ["message", "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
			overwrite => [ "message" ]
		}
		mutate {
			convert => ["response", "integer"]
			convert => ["bytes", "integer"]
			convert => ["responsetime", "float"]
		}
		geoip {
			source => "clientip"
			target => "geoip"
			add_tag => [ "nginx-geoip" ]
		}
		date {
			match => [ "timestamp", "dd/MMM/YYYY:HH:mm:ss Z" ]
			remove_field => [ "timestamp" ]
		}
		useragent {
			source => "agent"
		}
	}
	if [input][type] == "error" {
		grok {
			match => ["message", "(?<timestamp>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER:threadid}\: \*%{NUMBER:connectionid} %{GREEDYDATA:errormessage}, client: %{IP:client}, server: %{GREEDYDATA:server}, request: %{GREEDYDATA:request}"]
			overwrite => [ "message" ]
		}
	}
}
output {
	if "access" in [tags] {
		elasticsearch {
			hosts => "https://localhost:9200"
			index => "access-%{+YYY.MM.dd}"
			user => "elastic"
			password => "satuhatisatujiwa"
			cacert => "/etc/elasticsearch/certs/http_ca.crt"
			ssl_certificate_verification => false
			document_type => "nginx_logs"
		}
	}
	if "error" in [tags] {
		elasticsearch {
			hosts => "https://localhost:9200"
			index => "error-%{+YYY.MM.dd}"
			user => "elastic"
			password => "satuhatisatujiwa"
			cacert => "/etc/elasticsearch/certs/http_ca.crt"
			ssl_certificate_verification => false
			document_type => "nginx_logs"
		}
	}
}

