input {
	beats {
		port => 5044
	}
	file {
		path => ["/nfs/nginx/filkom.ub.ac.id-access.log"]
		type => "nginx"
		tags => ["access"]
	}
	file {
		path => ["nfs/nginx/filkom.ub.ac.id-error.log"]
		type => "nginx"
		tags => ["error"]
	}
}
filter {
	if [input][type] == "access" {
		grok {
        		match => { "message" => ["%{IPORHOST:ip} - %{DATA:user_name} \[%{HTTPDATE:time}\] \"%{WORD:http_method} %{DATA:url} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} %{NUMBER:body_sent_bytes} \"%{DATA:referrer}\" \"%{DATA:agent}\""] }
        		remove_field => "message"
     		}
      		date {
        		match => ["time", "dd/MMM/YYYY:HH:mm:ss Z"]
        		target => "@timestamp"
        		remove_field => "time"
      		}
      		useragent {
        		source => "agent"
        		target => "user_agent"
        		remove_field => "agent"
      		}
      		geoip {
        		source => "ip"
        		target => "geoip"
      		}
	}
	if [input][type] == "error" {
		grok {
        		match => { "message" => ["%{DATA:time} \[%{DATA:log_level}\] %{NUMBER:pid}#%{NUMBER:tid}: (\*%{NUMBER:connection_id} )?%{GREEDYDATA:messageTmp}"] }
        		remove_field => "message"
      		}
      		date {
        		match => ["time", "YYYY/MM/dd HH:mm:ss"]
        		target => "@timestamp"
        		remove_field => "time"
      		}
      		mutate {
        		rename => {"messageTmp" => "message"}
      		}
    		}

    		grok {
      			remove_field => "[event]"
    		}
    		mutate {
      			add_field => {"serviceName" => "nginx"}
    		}
	}
}
output {
	if "access" in [tags] {
		elasticsearch {
			hosts => "https://localhost:9200"
			index => "filkomlog-%{+YYY.MM.dd}"
			user => "elastic"
			password => "satuhatisatujiwa"
			cacert => "/etc/elasticsearch/certs/http_ca.crt"
			ssl_certificate_verification => false
			document_type => "nginx_logs"
		}
	}
	if "error" in [tags] {
		elasticsearch {
			hosts => "https://localhost:9200"
			index => "revproxy-%{+YYY.MM.dd}"
			user => "elastic"
			password => "satuhatisatujiwa"
			cacert => "/etc/elasticsearch/certs/http_ca.crt"
			ssl_certificate_verification => false
			document_type => "nginx_logs"
		}
	}
	stdout { codec => rubydebug }
}

